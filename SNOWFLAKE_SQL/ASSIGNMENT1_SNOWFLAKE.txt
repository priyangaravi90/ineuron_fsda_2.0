----------------------------------SALES DATA ASSIGNMENT-------------------------
USE DATABASE DEMO_DATABASE;

CREATE OR REPLACE TABLE RP_SALES_DATA
(
order_id STRING  PRIMARY KEY, ---1 .SET PRIMARY KEY.
order_date	DATE,             -----2. CHECK THE ORDER DATE AND SHIP DATE TYPE AND THINK IN WHICH DATA TYPE YOU HAVE TO CHANGE.  
ship_date	DATE,
ship_mode	VARCHAR(50),
customer_name	VARCHAR(50),
segment	VARCHAR(50),
state	VARCHAR(50),
country	VARCHAR(50),
market	VARCHAR(50),
region	VARCHAR(50),
product_id	STRING,
category	VARCHAR(50),
sub_category	VARCHAR(50),
product_name	STRING,
sales	VARCHAR(50),
quantity INT,	
discount DECIMAL(10,2),	
profit	DECIMAL(10,2),
shipping_cost	DECIMAL(10,2),
order_priority	VARCHAR(50),
years int);

SELECT * FROM  RP_SALES_DATA;

----3. EXTACT THE LAST NUMBER AFTER THE - AND CREATE OTHER COLUMN AND UPDATE IT.
SELECT split_part(order_id,'-',3) AS ORDER_ID1
FROM RP_SALES_DATA;


CREATE OR REPLACE TABLE RP_SALES_DATA_COPY AS
SELECT * FROM  RP_SALES_DATA;

ALTER TABLE  RP_SALES_DATA_COPY
ADD COLUMN ORDER_ID1 INT;

UPDATE  RP_SALES_DATA_COPY
SET ORDER_ID1 = split_part(order_id,'-',3) WHERE ORDER_ID1 IS NULL

SELECT * FROM  RP_SALES_DATA_COPY;

----4.  FLAG ,IF DISCOUNT IS GREATER THEN 0 THEN  YES ELSE FALSE AND PUT IT IN NEW COLUMN FOR EVERY ORDER ID.
ALTER TABLE  RP_SALES_DATA_COPY
ADD COLUMN DISCOUNT_GIVEN VARCHAR(10);

UPDATE  RP_SALES_DATA_COPY
SET DISCOUNT_GIVEN = CASE 
                          WHEN DISCOUNT > 0 THEN 'YES' 
                          ELSE 'FALSE'
                          END
                          WHERE DISCOUNT_GIVEN IS NULL
                          
SELECT * FROM  RP_SALES_DATA_COPY;

----5.  FIND OUT THE FINAL PROFIT AND PUT IT IN COLUMN FOR EVERY ORDER ID.
ALTER TABLE  RP_SALES_DATA_COPY
ADD COLUMN FINAL_PROFIT DECIMAL(10,2);

UPDATE RP_SALES_DATA_COPY
SET FINAL_PROFIT = PROFIT-SHIPPING_COST WHERE FINAL_PROFIT IS NULL
SELECT * FROM  RP_SALES_DATA_COPY;

----6.  FIND OUT HOW MUCH DAYS TAKEN FOR EACH ORDER TO PROCESS FOR THE SHIPMENT FOR EVERY ORDER ID.
ALTER TABLE  RP_SALES_DATA_COPY
ADD COLUMN DAYS INT; -- PROCESS DATE

UPDATE RP_SALES_DATA_COPY
SET DAYS = datediff('day',ORDER_DATE ,SHIP_DATE) WHERE DAYS IS NULL
SELECT * FROM  RP_SALES_DATA_COPY;

----7.  FLAG THE PROCESS DAY AS BY RATING IF IT TAKES LESS OR EQUAL 3  DAYS MAKE 5,LESS OR EQUAL THAN 6 DAYS BUT MORE THAN 3 MAKE 4,LESS THAN 10 BUT MORE THAN 6 MAKE 3,MORE THAN 10 MAKE IT 2 FOR EVERY ORDER ID.
ALTER TABLE  RP_SALES_DATA_COPY
ADD COLUMN RATING INT;

UPDATE RP_SALES_DATA_COPY
SET RATING = CASE WHEN DAYS <= '3' THEN '5'
                  WHEN DAYS <= '6' AND DAYS > '3' THEN '4'
                  WHEN DAYS < '10' AND DAYS > '6' THEN '3'
                  WHEN DAYS > '10' THEN '2'
                  ELSE '1'
                  END
                  WHERE  RATING IS NULL